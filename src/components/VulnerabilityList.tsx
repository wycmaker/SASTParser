import React, { useState } from 'react';
import { 
  AlertTriangle, 
  AlertCircle, 
  Info, 
  ExternalLink, 
  ChevronDown, 
  ChevronRight,
  Shield
} from 'lucide-react';
import type { Vulnerability, SeverityLevel } from '../types/sast';
import { 
  cn, 
  getSeverityClassName, 
  formatFilePath, 
  truncateText,
  getFileExtension,
  getLanguageFromExtension 
} from '../utils/helpers';

interface VulnerabilityListProps {
  vulnerabilities: Vulnerability[];
  onVulnerabilitySelect?: (vulnerability: Vulnerability) => void;
  selectedVulnerability?: Vulnerability | null;
}

interface VulnerabilityItemProps {
  vulnerability: Vulnerability;
  isSelected: boolean;
  onSelect: () => void;
}

const VulnerabilityItem: React.FC<VulnerabilityItemProps> = ({ 
  vulnerability, 
  isSelected, 
  onSelect 
}) => {
  const [isExpanded, setIsExpanded] = useState(false);
  const { extra, path, start, end } = vulnerability;
  const severity = extra?.severity || 'UNKNOWN';
  const metadata = extra?.metadata;

  const getSeverityIcon = (severity: SeverityLevel) => {
    switch (severity) {
      case 'ERROR':
        return <AlertTriangle className="h-4 w-4 text-danger-600" />;
      case 'WARNING':
        return <AlertCircle className="h-4 w-4 text-warning-600" />;
      case 'INFO':
        return <Info className="h-4 w-4 text-primary-600" />;
      default:
        return <Shield className="h-4 w-4 text-gray-600" />;
    }
  };

  const fileExtension = getFileExtension(path);
  const language = getLanguageFromExtension(fileExtension);

  return (
    <div
      className={cn(
        'bg-white border border-gray-200 rounded-lg p-5 hover:shadow-md hover:border-gray-300 transition-all duration-200 cursor-pointer',
        isSelected && 'border-blue-500 bg-blue-50 shadow-md'
      )}
      onClick={onSelect}
    >
      {/* 頭部信息 */}
      <div className="flex items-start justify-between mb-3">
        <div className="flex items-start space-x-3 flex-1">
          <div className="flex-shrink-0 mt-1">
            {getSeverityIcon(severity as SeverityLevel)}
          </div>
          
          <div className="flex-1 min-w-0">
            <div className="flex items-center space-x-2 mb-2">
              <span className={cn('inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium', getSeverityClassName(severity as SeverityLevel))}>
                {severity}
              </span>
              {language && (
                <span className="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-green-100 text-green-800">
                  {language}
                </span>
              )}
            </div>
            
            <h4 className="text-sm font-medium text-gray-900 mb-1">
              {truncateText(vulnerability.check_id, 60)}
            </h4>
            
            <div className="space-y-1">
              <div className="font-mono text-sm bg-gray-100 px-3 py-1 rounded-md text-gray-700 break-words text-xs">
                📁 {formatFilePath(path, 50)}
              </div>
              <div className="text-xs text-gray-500 font-mono">
                📍 第{start?.line}行，第{start?.col}-{end?.col}列
              </div>
            </div>
          </div>
        </div>

        <button
          onClick={(e) => {
            e.stopPropagation();
            setIsExpanded(!isExpanded);
          }}
          className="flex-shrink-0 p-1 rounded hover:bg-gray-100 transition-colors"
        >
          {isExpanded ? (
            <ChevronDown className="h-4 w-4 text-gray-500" />
          ) : (
            <ChevronRight className="h-4 w-4 text-gray-500" />
          )}
        </button>
      </div>

      {/* 簡要描述 */}
      <div className="mb-3">
        <p className="text-sm text-gray-700 leading-relaxed">
          {truncateText(extra?.message || '暫無描述', isExpanded ? 500 : 120)}
        </p>
      </div>

      {/* 快速信息標籤 */}
      <div className="flex flex-wrap gap-2 mb-4">
        {metadata?.impact && (
          <span className={cn(
            'inline-flex items-center px-2 py-1 rounded-md text-xs font-medium',
            metadata.impact === 'HIGH' ? 'bg-red-100 text-red-800' :
            metadata.impact === 'MEDIUM' ? 'bg-amber-100 text-amber-800' :
            'bg-green-100 text-green-800'
          )}>
            🎯 影響: {metadata.impact}
          </span>
        )}
        {metadata?.confidence && (
          <span className="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 text-blue-700">
            ✅ 可信度: {metadata.confidence}
          </span>
        )}
        {metadata?.vulnerability_class && Array.isArray(metadata.vulnerability_class) && metadata.vulnerability_class.length > 0 && (
          <span className="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-purple-100 text-purple-800">
            🏷️ {metadata.vulnerability_class[0]}
          </span>
        )}
      </div>

      {/* 展開詳情 */}
      {isExpanded && (
        <div className="border-t border-gray-200 pt-4 space-y-4 animate-slide-up">
          {/* 詳細元數據 */}
          {metadata && (
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <h5 className="text-sm font-medium text-gray-900 mb-2">風險評估</h5>
                <div className="space-y-1 text-sm">
                  <div className="flex justify-between">
                    <span className="text-gray-600">可能性:</span>
                    <span className="font-medium">{metadata.likelihood || 'N/A'}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">影響:</span>
                    <span className="font-medium">{metadata.impact || 'N/A'}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">可信度:</span>
                    <span className="font-medium">{metadata.confidence || 'N/A'}</span>
                  </div>
                </div>
              </div>

              <div>
                <h5 className="text-sm font-medium text-gray-900 mb-2">分類信息</h5>
                <div className="space-y-1 text-sm">
                  <div className="flex justify-between">
                    <span className="text-gray-600">類别:</span>
                    <span className="font-medium">{metadata.category || 'N/A'}</span>
                  </div>
                  {metadata.subcategory && Array.isArray(metadata.subcategory) && metadata.subcategory.length > 0 && (
                    <div className="flex justify-between">
                      <span className="text-gray-600">子類别:</span>
                      <span className="font-medium">{metadata.subcategory.join(', ')}</span>
                    </div>
                  )}
                </div>
              </div>
            </div>
          )}

          {/* CWE 和 OWASP */}
          {(metadata?.cwe || metadata?.owasp) && (
            <div>
              <h5 className="text-sm font-medium text-gray-900 mb-2">安全標準</h5>
              <div className="space-y-2">
                {metadata.cwe && Array.isArray(metadata.cwe) && metadata.cwe.length > 0 && (
                  <div>
                    <span className="text-xs text-gray-600 block mb-1">CWE:</span>
                    <div className="flex flex-wrap gap-1">
                      {metadata.cwe.map((cwe, index) => (
                        <span
                          key={index}
                          className="px-2 py-1 bg-orange-100 text-orange-700 text-xs rounded"
                        >
                          {cwe}
                        </span>
                      ))}
                    </div>
                  </div>
                )}
                {metadata.owasp && Array.isArray(metadata.owasp) && metadata.owasp.length > 0 && (
                  <div>
                    <span className="text-xs text-gray-600 block mb-1">OWASP:</span>
                    <div className="flex flex-wrap gap-1">
                      {metadata.owasp.map((owasp, index) => (
                        <span
                          key={index}
                          className="px-2 py-1 bg-green-100 text-green-700 text-xs rounded"
                        >
                          {owasp}
                        </span>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}

          {/* 參考鏈接 */}
          {metadata?.references && Array.isArray(metadata.references) && metadata.references.length > 0 && (
            <div>
              <h5 className="text-sm font-medium text-gray-900 mb-2">參考資料</h5>
              <div className="space-y-1">
                {metadata.references.slice(0, 3).map((reference, index) => (
                  <a
                    key={index}
                    href={reference}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="flex items-center space-x-1 text-sm text-primary-600 hover:text-primary-700 transition-colors"
                    onClick={(e) => e.stopPropagation()}
                  >
                    <ExternalLink className="h-3 w-3" />
                    <span className="truncate">{reference}</span>
                  </a>
                ))}
                {metadata.references.length > 3 && (
                  <span className="text-xs text-gray-500">
                    还有 {metadata.references.length - 3} 个参考链接...
                  </span>
                )}
              </div>
            </div>
          )}

          {/* 程式碼位置詳情 */}
          <div>
            <h5 className="text-sm font-medium text-gray-900 mb-2">程式碼位置</h5>
            <div className="bg-gray-50 rounded p-3 text-sm font-mono">
              <div className="text-gray-600 mb-1">文件: {path}</div>
              <div className="text-gray-600">
                位置: 第{start?.line}行, 第{start?.col}列 - 第{end?.col}列
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

const VulnerabilityList: React.FC<VulnerabilityListProps> = ({ 
  vulnerabilities, 
  onVulnerabilitySelect,
  selectedVulnerability 
}) => {
  if (vulnerabilities.length === 0) {
    return (
      <div className="text-center py-12">
        <Shield className="h-12 w-12 text-gray-400 mx-auto mb-4" />
        <h3 className="text-lg font-medium text-gray-900 mb-2">沒有找到安全問題</h3>
        <p className="text-gray-500">
          根據當前篩選條件，未發現任何安全漏洞。
        </p>
      </div>
    );
  }

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-semibold text-gray-900">
          安全問題列表 ({vulnerabilities.length})
        </h3>
      </div>
      
      <div className="space-y-3">
        {vulnerabilities.map((vulnerability, index) => (
          <VulnerabilityItem
            key={`${vulnerability.path}-${vulnerability.start?.line}-${index}`}
            vulnerability={vulnerability}
            isSelected={selectedVulnerability === vulnerability}
            onSelect={() => onVulnerabilitySelect?.(vulnerability)}
          />
        ))}
      </div>
    </div>
  );
};

export default VulnerabilityList;
